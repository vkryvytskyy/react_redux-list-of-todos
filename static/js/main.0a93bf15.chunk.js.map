{"version":3,"sources":["constants.js","User.js","TodoItem.js","actionCreator.js","getData.js","TodoList.js","App.js","store.js","reducers/tasks.js","reducers/rootReducer.js","index.js"],"names":["ID","TITLE","USER","User","_ref","todo","react_default","a","createElement","user","username","connect","state","tasks","deleteTodo","id","type","props","title","src_User","className","onClick","getData","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","this","arguments","loadTodos","todos","sortBy","sortType","currentSorting","_useState","useState","_useState2","slicedToArray","isLoaded","setLoaded","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setCurrentSorting","getTodos","users","allTogether","map","find","userId","makeSorted","field","src_TodoItem","key","disabled","App","preloadedState","src_TodoList","length","undefined","toConsumableArray","filter","concat","reverse","sort","b","localeCompare","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"0OAIaA,EAAK,KACLC,EAAQ,QACRC,EAAO,OCOLC,MAVf,SAAAC,GAAwB,IAARC,EAAQD,EAARC,KACd,OACEC,EAAAC,EAAAC,cAAA,UAAKH,EAAKI,KAAKC,WC8BJC,kBAAQ,SAAAC,GAAK,MAAK,CAC/BC,MAAOD,EAAMC,QAEf,CAAEC,WC7BwB,SAAAC,GAAE,MAAK,CAC/BC,KHTyB,cGUzBD,QDwBaJ,CA7Bf,SAAkBM,GAMhB,OACEX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKS,EAAMZ,KAAKA,KAAKU,IACrBT,EAAAC,EAAAC,cAAA,UAAKS,EAAMZ,KAAKA,KAAKa,OACrBZ,EAAAC,EAAAC,cAACW,EAAD,CAAMd,KAAMY,EAAMZ,OAClBC,EAAAC,EAAAC,cAAA,MAAIY,UAAU,kBACZd,EAAAC,EAAAC,cAAA,UACEQ,KAAK,SACLI,UAAU,gBACVC,QAAS,kBAdGN,EAccE,EAAMZ,KAAKA,KAAKU,QAZhDD,EADuBG,EAAfH,YACGC,GAFM,IAACA,IAWd,cEZOO,EANF,eAAAlB,EAAAmB,OAAAC,EAAA,EAAAD,CAAAE,EAAAlB,EAAAmB,KAAG,SAAAC,EAAMX,GAAN,IAAAY,EAAA,OAAAH,EAAAlB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,qDAAAF,EAAAE,KAAA,EAESC,MAFT,wCAEqBjB,GAFrB,cAERY,EAFQE,EAAAI,KAAAJ,EAAAK,OAAA,SAGPP,EAASQ,QAHF,wBAAAN,EAAAO,SAAAV,MAAH,gBAAAW,GAAA,OAAAlC,EAAAmC,MAAAC,KAAAC,YAAA,GCsGE9B,kBAAQ,SAAAC,GAAK,MAAK,CAC/BC,MAAOD,EAAMC,QACX,CAAE6B,UFpGmB,SAAAC,GAAK,MAAK,CACjC3B,KHLwB,aGMxB2B,UEkGeC,OFnFK,SAACC,EAAUC,GAAX,MAA+B,CACnD9B,KHnBkB,OGoBlB6B,WACAC,oBE8EanC,CA9Ff,SAAkBM,GAAO,IAAA8B,EACOC,oBAAS,GADhBC,EAAA1B,OAAA2B,EAAA,EAAA3B,CAAAwB,EAAA,GAChBI,EADgBF,EAAA,GACNG,EADMH,EAAA,GAAAI,EAEOL,oBAAS,GAFhBM,EAAA/B,OAAA2B,EAAA,EAAA3B,CAAA8B,EAAA,GAEhBE,EAFgBD,EAAA,GAEPE,EAFOF,EAAA,GAAAG,EAGqBT,mBAAS,MAH9BU,EAAAnC,OAAA2B,EAAA,EAAA3B,CAAAkC,EAAA,GAGhBX,EAHgBY,EAAA,GAGAC,EAHAD,EAAA,GAKjBE,EAAQ,eAAAxD,EAAAmB,OAAAC,EAAA,EAAAD,CAAAE,EAAAlB,EAAAmB,KAAG,SAAAC,IAAA,IAAAe,EAAAC,EAAAkB,EAAAC,EAAA,OAAArC,EAAAlB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPU,EAAczB,EAAdyB,UACRc,GAAW,GAFI1B,EAAAE,KAAA,EAGKV,EAAQ,SAHb,cAGTqB,EAHSb,EAAAI,KAAAJ,EAAAE,KAAA,EAIKV,EAAQ,SAJb,OAITuC,EAJS/B,EAAAI,KAKT4B,EAAcnB,EAAMoB,IAAI,SAAA1D,GAAI,MAAK,CACrCA,OACAI,KAAMoD,EAAMG,KAAK,SAAAvD,GAAI,OAAIA,EAAKM,KAAOV,EAAK4D,YAE5CvB,EAAUoB,GACVN,GAAW,GACXJ,GAAU,GAXK,yBAAAtB,EAAAO,SAAAV,MAAH,yBAAAvB,EAAAmC,MAAAC,KAAAC,YAAA,GAcRyB,EAAa,SAACC,IAElBvB,EADmB3B,EAAX2B,QACDuB,EAAOrB,GACda,EAAkBQ,IAGZtD,EAAUI,EAAVJ,MACR,OACEP,EAAAC,EAAAC,cAAA,WACG2C,EACC7C,EAAAC,EAAAC,cAAA,SAAOY,UAAU,SACfd,EAAAC,EAAAC,cAAA,SAAOY,UAAU,cACfd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEQ,KAAK,SACLK,QAAS,kBAAM6C,EAAWlE,IAC1BoB,UAAU,sBAHZ,OAQFd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEQ,KAAK,SACLK,QAAS,kBAAM6C,EAAWjE,IAC1BmB,UAAU,sBAHZ,UAQFd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEQ,KAAK,SACLK,QAAS,kBAAM6C,EAAWhE,IAC1BkB,UAAU,sBAHZ,WAUNd,EAAAC,EAAAC,cAAA,aAEIK,EAAMkD,IAAI,SAAA1D,GAAI,OACZC,EAAAC,EAAAC,cAAC4D,EAAD,CACEC,IAAKhE,EAAKA,KAAKa,MACfb,KAAMA,EACNe,UAAU,YAQlBd,EAAAC,EAAAC,cAAA,UACEQ,KAAK,SACLK,QAAS,kBAAMuC,KACfU,SAAUf,GAETA,EAAU,UAAY,WC7EpBgB,ICLQC,EDKRD,EARf,WACE,OACEjE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAACiE,EAAD,sCEqDS5D,EAvDD,WAQR,IARSD,EAQT6B,UAAAiC,OAAA,QAAAC,IAAAlC,UAAA,GAAAA,UAAA,GARiB,GAQjBrC,EAAAqC,UAAAiC,OAAA,EAAAjC,UAAA,QAAAkC,EAPJ3D,EAOIZ,EAPJY,KACAD,EAMIX,EANJW,GACAG,EAKId,EALJc,MACAR,EAIIN,EAJJM,SACAiC,EAGIvC,EAHJuC,MACAE,EAEIzC,EAFJyC,SACAC,EACI1C,EADJ0C,eAEA,OAAQ9B,GACN,IRdsB,aQepB,OAAOO,OAAAqD,EAAA,EAAArD,CACFoB,GAEP,IRjBuB,cQkBrB,OAAOpB,OAAAqD,EAAA,EAAArD,CACFX,EAAMiE,OAAO,SAAAxE,GAAI,OAAIA,EAAKA,KAAKU,KAAOA,KAE7C,IRpBoB,WQqBlB,SAAA+D,OAAAvD,OAAAqD,EAAA,EAAArD,CACKX,GADL,CAEE,CACEP,KAAM,CACJU,KACAG,SAEFT,KAAM,CACJC,eAIR,IRhCgB,OQiCd,OAAImC,IAAaC,EACRvB,OAAAqD,EAAA,EAAArD,CACFX,EAAMmE,WAGTlC,IAAa3C,EACRqB,OAAAqD,EAAA,EAAArD,CACFX,EAAMoE,KAAK,SAACzE,EAAG0E,GAAJ,OAAU1E,EAAEE,KAAKC,SAASwE,cAAcD,EAAExE,KAAKC,aAG7DmC,IAAa5C,EACRsB,OAAAqD,EAAA,EAAArD,CACFX,EAAMoE,KAAK,SAACzE,EAAG0E,GAAJ,OAAU1E,EAAEF,KAAKa,MAAMgE,cAAcD,EAAE5E,KAAKa,UAGvDK,OAAAqD,EAAA,EAAArD,CACFX,EAAMoE,KAAK,SAACzE,EAAG0E,GAAJ,OAAU1E,EAAEF,KAAKU,GAAKkE,EAAE5E,KAAKU,MAE/C,QACE,OAAOH,IClDEuE,EAFKC,0BAAgB,CAAEvE,UFavBwE,GAVQb,EAQM,GAP3Bc,sBACEH,EACAX,EACAe,8BAAoBC,0BAAgBC,QGHxCC,IAASC,OACPrF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAUP,MAAOA,GACf/E,EAAAC,EAAAC,cAACqF,EAAD,OAEAC,SAASC,eAAe","file":"static/js/main.0a93bf15.chunk.js","sourcesContent":["export const LOAD_TODOS = 'LOAD_TODOS';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const ADD_TODO = 'ADD_TODO';\nexport const SORT = 'SORT';\nexport const ID = 'ID';\nexport const TITLE = 'TITLE';\nexport const USER = 'USER';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ todo }) {\n  return (\n    <td>{todo.user.username}</td>\n  );\n}\n\nUser.propTypes = {\n  todo: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport { deleteTodo } from './actionCreator';\n\nfunction TodoItem(props) {\n  const removeTodo = (id) => {\n    const { deleteTodo } = props;\n    deleteTodo(id);\n  };\n\n  return (\n    <tr>\n      <td>{props.todo.todo.id}</td>\n      <td>{props.todo.todo.title}</td>\n      <User todo={props.todo} />\n      <td className=\"table-noborder\">\n        <button\n          type=\"button\"\n          className=\"table--button\"\n          onClick={() => removeTodo(props.todo.todo.id)}\n        >\n          Remove\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf(PropTypes.object).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default connect(state => ({\n  tasks: state.tasks,\n}),\n{ deleteTodo })(TodoItem);\n","import {\n  LOAD_TODOS, REMOVE_TODO, ADD_TODO, SORT,\n} from './constants';\n\nexport const loadTodos = todos => ({\n  type: LOAD_TODOS,\n  todos,\n});\n\nexport const deleteTodo = id => ({\n  type: REMOVE_TODO,\n  id,\n});\n\nexport const addTodo = (id, title, username) => ({\n  type: ADD_TODO,\n  id,\n  title,\n  username,\n});\n\nexport const sortBy = (sortType, currentSorting) => ({\n  type: SORT,\n  sortType,\n  currentSorting,\n});\n","const getData = async(type) => {\n  const url = `https://jsonplaceholder.typicode.com/`;\n  const response = await fetch(url + type);\n  return response.json();\n};\n\nexport default getData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ID, TITLE, USER } from './constants';\nimport TodoItem from './TodoItem';\nimport getData from './getData';\nimport { loadTodos, sortBy } from './actionCreator';\n\nfunction TodoList(props) {\n  const [isLoaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [currentSorting, setCurrentSorting] = useState('ID');\n\n  const getTodos = async() => {\n    const { loadTodos } = props;\n    setLoading(true);\n    const todos = await getData('todos');\n    const users = await getData('users');\n    const allTogether = todos.map(todo => ({\n      todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n    loadTodos(allTogether);\n    setLoading(false);\n    setLoaded(true);\n  };\n\n  const makeSorted = (field) => {\n    const { sortBy } = props;\n    sortBy(field, currentSorting);\n    setCurrentSorting(field);\n  };\n\n  const { tasks } = props;\n  return (\n    <div>\n      {isLoaded ? (\n        <table className=\"table\">\n          <thead className=\"table-head\">\n            <tr>\n              <td>\n                <button\n                  type=\"button\"\n                  onClick={() => makeSorted(ID)}\n                  className=\"table--head-button\"\n                >\n                  id\n                </button>\n              </td>\n              <td>\n                <button\n                  type=\"button\"\n                  onClick={() => makeSorted(TITLE)}\n                  className=\"table--head-button\"\n                >\n                  title\n                </button>\n              </td>\n              <td>\n                <button\n                  type=\"button\"\n                  onClick={() => makeSorted(USER)}\n                  className=\"table--head-button\"\n                >\n                  user\n                </button>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              tasks.map(todo => (\n                <TodoItem\n                  key={todo.todo.title}\n                  todo={todo}\n                  className=\"row\"\n                />\n              ))\n            }\n          </tbody>\n        </table>\n      )\n        : (\n          <button\n            type=\"button\"\n            onClick={() => getTodos()}\n            disabled={loading}\n          >\n            {loading ? 'Loading' : 'Load'}\n          </button>\n        )\n      }\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortBy: PropTypes.func.isRequired,\n  loadTodos: PropTypes.func.isRequired,\n};\n\nexport default connect(state => ({\n  tasks: state.tasks,\n}), { loadTodos, sortBy })(TodoList);\n","import React from 'react';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers/rootReducer';\n\nconst configureStore = preloadedState => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    composeWithDevTools(applyMiddleware(thunk)),\n  )\n);\n\nconst store = configureStore({});\n\nexport default store;\n","import {\n  LOAD_TODOS, REMOVE_TODO, ADD_TODO, SORT, USER, TITLE,\n} from '../constants';\n\nconst tasks = (state = [], {\n  type,\n  id,\n  title,\n  username,\n  todos,\n  sortType,\n  currentSorting,\n}) => {\n  switch (type) {\n    case LOAD_TODOS:\n      return [\n        ...todos,\n      ];\n    case REMOVE_TODO:\n      return [\n        ...state.filter(todo => todo.todo.id !== id),\n      ];\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          todo: {\n            id,\n            title,\n          },\n          user: {\n            username,\n          },\n        },\n      ];\n    case SORT:\n      if (sortType === currentSorting) {\n        return [\n          ...state.reverse(),\n        ];\n      }\n      if (sortType === USER) {\n        return [\n          ...state.sort((a, b) => a.user.username.localeCompare(b.user.username)),\n        ];\n      }\n      if (sortType === TITLE) {\n        return [\n          ...state.sort((a, b) => a.todo.title.localeCompare(b.todo.title)),\n        ];\n      }\n      return [\n        ...state.sort((a, b) => a.todo.id - b.todo.id),\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n","import { combineReducers } from 'redux';\nimport tasks from './tasks';\n\nconst rootReducer = combineReducers({ tasks });\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}